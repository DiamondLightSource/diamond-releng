<?xml version="1.0" encoding="UTF-8"?>
<project name="headless-ant-driver" basedir=".">

	<pathconvert property="workspace.loc" setonempty="false">
		<regexpmapper from="(.*)_git/.+" to="\1"/>
		<path><pathelement location="${ant.file}" /></path>
	</pathconvert>
	<fail message="ERROR: Could not determine workspace.loc" unless="workspace.loc" />
	<property name="workspace.git.loc" value="${workspace.loc}_git" />

	<!-- ====================================================================
	       Management of sub-builds
	     ==================================================================== -->

	<target name="select-plugins-for-subant" depends="_plugins-for-subant-specified, _plugins-for-subant-all">
	</target>

	<!-- select just those plugins matching the user-supplied list with a releng.ant -->
	<target name="_plugins-for-subant-specified" if="plugin_list">
		<pathconvert property="plugin-releng-files" pathsep=" " setonempty="false">
			<regexpmapper from="^(.*)(${plugin_list})(/)releng.ant$$" to="\2\3releng.ant" handledirsep="yes"/>
			<fileset dir="${workspace.git.loc}" erroronmissingdir="false">
				<include name="**/releng.ant" />
			</fileset>
		</pathconvert>
	</target>
	<target name="_plugins-for-subant-all" unless="plugin-releng-files">
		<property name="plugin-releng-files" value="**${file.separator}releng.ant" />
	</target>

	<macrodef name="iterate_plugins">
		<attribute name="target" />
		<attribute name="plugin-releng-files" />
		<attribute name="echo.level" default="debug" />
		<attribute name="inheritAll" default="false" />
		<attribute name="inheritRefs" default="false" />
		<attribute name="verbose" default="false" />
		<!-- subant cannot pass anything back to the parent, so set failonerror true -->
		<!-- a failing test is not an error, only an explicitly issued fail (eg in target jython-call) -->
		<attribute name="failonerror" default="true" />
		<element name="subant-elements" implicit="yes" optional="true" />
		<sequential>
			<echo level="@{echo.level}">iterating over @{target} in @{plugin-releng-files}</echo>
			<subant target="@{target}" inheritAll="@{inheritAll}" inheritRefs="@{inheritRefs}" verbose="@{verbose}" failonerror="@{failonerror}">
				<fileset dir="${workspace.git.loc}" includes="@{plugin-releng-files}" erroronmissingdir="false" />
				<property name="archivePrefix" value="${archivePrefix}" />
				<property name="gdaVerboseSetting" value="${gdaVerboseSetting}" />
				<propertyset>
					<propertyref prefix="START_DATETIME" />
				</propertyset>
				<propertyset>
					<propertyref prefix="gda.testing" />
				</propertyset>
				<subant-elements />
			</subant>
		</sequential>
	</macrodef>

	<!-- ====================================================================
	       Utilities
	     ==================================================================== -->

	<target name="print-ant-properties">
		<echo level="warning">List of all Ant Properties</echo>
		<echoproperties />
	</target>

	<target name="dummy" depends="select-plugins-for-subant">  <!-- useful for testing the build files themselves -->
		<iterate_plugins target="dummy" plugin-releng-files="${plugin-releng-files}" echo.level="debug" />
	</target>

	<!-- ====================================================================
	       CORBA Compile
	     ==================================================================== -->

	<target name="corba-clean" description="Delete work folders used when generating CORBA jars" depends="select-plugins-for-subant">
		<iterate_plugins target="corba-clean" plugin-releng-files="${plugin-releng-files}" echo.level="debug" />
	</target>

	<target name="corba-make-jar" description="Builds the jar containing CORBA classes for all or selected plugins" depends="select-plugins-for-subant">
		<iterate_plugins target="corba-make-jar" plugin-releng-files="${plugin-releng-files}" />
	</target>

	<target name="corba-validate-jar" description="Validates the jar containing CORBA classes for all or selected plugins" depends="select-plugins-for-subant">
		<iterate_plugins target="corba-validate-jar" plugin-releng-files="${plugin-releng-files}" />
	</target>

	<!-- ====================================================================
	       Testing
	     ==================================================================== -->

	<target name="tests-clean" description="Delete test output and results files from JUnit/JyUnit tests" depends="select-plugins-for-subant">
		<iterate_plugins target="tests-clean" plugin-releng-files="${plugin-releng-files}" />
	</target>

	<target name="junit-tests" depends="select-plugins-for-subant" description="Run Java JUnit tests for all (or selected) projects">
		<iterate_plugins target="junit-tests" plugin-releng-files="${plugin-releng-files}" echo.level="debug" />
	</target>

	<target name="jyunit-tests" depends="select-plugins-for-subant" description="Runs JyUnit tests for all (or selected) projects">
		<iterate_plugins target="jyunit-tests" plugin-releng-files="${plugin-releng-files}" echo.level="debug" />
	</target>

	<target name="all-tests" depends="select-plugins-for-subant" description="Runs both Java and JyUnit tests for all (or selected) projects">
		<iterate_plugins target="all-tests" plugin-releng-files="${plugin-releng-files}" />
	</target>

</project>
